/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.flashy;

/**
 *
 * @author arpan
 */
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JLabel;
import javax.swing.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.Dimension;

public class TimerGUI extends javax.swing.JFrame {
private PomodoroTimer pomodoroTimer;
private RingProgressBar ringProgressBar;
    /**
     * Creates new form TimerGUI
     */
    public TimerGUI() {
       // Set the default close operation for the JFrame.
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        // Initialize components in the GUI.
        initComponents();

        // Create a new PomodoroTimer object and pass necessary GUI components to it.
        pomodoroTimer = new PomodoroTimer(lblTimerDisplay, btnStartTimer, lblPomodoroCountDisplay, lblFocusStatus, cboxTimerSelection, ringProgressBar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        lblTimerDisplay = new javax.swing.JLabel();
        btnStartTimer = new javax.swing.JButton();
        lblPomodoroCountDisplay = new javax.swing.JLabel();
        lblFocusStatus = new javax.swing.JLabel();
        cboxTimerSelection = new javax.swing.JComboBox<>();
        btnSkip = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlBackground.setBackground(new java.awt.Color(82, 126, 92));

        lblTimerDisplay.setBackground(new java.awt.Color(255, 255, 255));
        lblTimerDisplay.setFont(new java.awt.Font("Swis721 BT", 1, 24)); // NOI18N
        lblTimerDisplay.setForeground(new java.awt.Color(255, 255, 255));
        lblTimerDisplay.setText("25:00");

        btnStartTimer.setText("Start Timer");
        btnStartTimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartTimerActionPerformed(evt);
            }
        });

        lblPomodoroCountDisplay.setBackground(new java.awt.Color(255, 255, 255));
        lblPomodoroCountDisplay.setForeground(new java.awt.Color(255, 255, 255));
        lblPomodoroCountDisplay.setText("You have completed 0 pomodoro sessions!");

        lblFocusStatus.setBackground(new java.awt.Color(255, 255, 255));
        lblFocusStatus.setFont(new java.awt.Font("Swis721 BT", 1, 12)); // NOI18N
        lblFocusStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblFocusStatus.setText("Time to Study!");

        cboxTimerSelection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "25 Min", "50 Min" }));
        cboxTimerSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTimerSelectionActionPerformed(evt);
            }
        });

        btnSkip.setText("Skip");
        btnSkip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBackgroundLayout = new javax.swing.GroupLayout(pnlBackground);
        pnlBackground.setLayout(pnlBackgroundLayout);
        pnlBackgroundLayout.setHorizontalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(lblTimerDisplay))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnStartTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboxTimerSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lblFocusStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBackgroundLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btnSkip)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBackgroundLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(lblPomodoroCountDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlBackgroundLayout.setVerticalGroup(
            pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBackgroundLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblFocusStatus)
                .addGap(45, 45, 45)
                .addComponent(lblTimerDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(pnlBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxTimerSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(btnSkip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPomodoroCountDisplay)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        ringProgressBar = new RingProgressBar();
        ringProgressBar.setBounds(155, 50, 100, 100); // Adjust position and size as needed
        getContentPane().add(ringProgressBar);

        // Create a Timer to update the progress bar

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(pnlBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartTimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartTimerActionPerformed
        // Get the current text of the button to determine the action to perform.
        String buttonText = btnStartTimer.getText();

        // Variables to hold the selected time for study and break sessions.
        int selectedTimeInt = 0;
        int breakTime = 0;

        if (buttonText.equals("Start Timer")) {
            // If button text is "Start Timer," start the timer.
            btnStartTimer.setText("Pause");
            // Get the selected duration from the combo box.
            String selectedTime = (String) cboxTimerSelection.getSelectedItem();
            // Set the session lengths based on the selected duration.
            if (selectedTime.equals("25 Min")) {
                selectedTimeInt = 25;
                breakTime = 5;
            } else if (selectedTime.equals("50 Min")) {
                selectedTimeInt = 50;
                breakTime= 10;
            }
            // Configure and start the Pomodoro timer session.
            pomodoroTimer.setSessionLengths(selectedTimeInt, breakTime);
            pomodoroTimer.startSession();
        } else if (buttonText.equals("Pause")) {
            // If button text is "Pause," pause the timer.
            btnStartTimer.setText("Resume");
            pomodoroTimer.pauseSession();
        } else if (buttonText.equals("Resume")) {
            // If button text is "Resume," resume the timer.
            btnStartTimer.setText("Pause");
            pomodoroTimer.resumeSession();
        }
        
    }//GEN-LAST:event_btnStartTimerActionPerformed

    private void cboxTimerSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTimerSelectionActionPerformed
        // TODO add your handling code here:
       // Get the selected item from the combo box.
        String selectedItem = cboxTimerSelection.getSelectedItem().toString();
        // Variable to hold the time display string.
        String timeDisplay = "";
        // Update the timer display based on the selected item.
        if (selectedItem.equals("25 Min")) {
            timeDisplay = "25:00";
        } else if (selectedItem.equals("50 Min")) {
            timeDisplay = "50:00";
        }
        // Set the timer display label text to the updated time display.
        lblTimerDisplay.setText(timeDisplay);
    }//GEN-LAST:event_cboxTimerSelectionActionPerformed

    private void btnSkipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkipActionPerformed
        // Call the skipSession method of PomodoroTimer to skip the current session.
        pomodoroTimer.skipSession();
    }//GEN-LAST:event_btnSkipActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSkip;
    private javax.swing.JButton btnStartTimer;
    private javax.swing.JComboBox<String> cboxTimerSelection;
    private javax.swing.JLabel lblFocusStatus;
    private javax.swing.JLabel lblPomodoroCountDisplay;
    private javax.swing.JLabel lblTimerDisplay;
    private javax.swing.JPanel pnlBackground;
    // End of variables declaration//GEN-END:variables
}
